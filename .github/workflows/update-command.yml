# This workflow is triggered by a comment on a pull request. The comment must contain "/update <command>" to trigger the workflow.

name: update
on:
  repository_dispatch:
    types: [update-command]

permissions:
  id-token: write
  contents: write

defaults:
  run:
    # We need -e -o pipefail for consistency with GitHub Actions' default behavior
    shell: bash -e -o pipefail {0}

jobs:
  # Parse the command
  parse:
    runs-on: ubuntu-latest
    outputs:
      run-ping: ${{ steps.parse.outputs.run-ping }}
      run-autoformat: ${{ steps.parse.outputs.run-autoformat }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name || github.repository }}
          ref: "refs/heads/main"
      - name: Parse Args
        id: parse
        uses: ./.github/actions/parse-update

  # Update the comment that triggered the /update command to show the run url
  comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.client_payload.pull_request.head.ref || github.ref_name }}
      - name: Update Comment
        uses: ./.github/actions/comment
        with:
          token: ${{ secrets.PAT }}

  # Do a simple ping/pong status update to validate things are working
  ping:
    runs-on: ubuntu-latest
    needs: parse
    if: needs.parse.outputs.run-ping == 'true'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.client_payload.pull_request.head.ref || github.ref_name }}
      - name: Ping Test
        uses: ./.github/actions/ping
        with:
          token: ${{ secrets.PAT }}

  # Update generated content
  autoformat:
    runs-on: ubuntu-latest
    needs: parse
    if: needs.parse.outputs.run-autoformat == 'true'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.client_payload.pull_request.head.ref || github.ref_name }}
      - name: Autoformat
        uses: ./.github/actions/autoformat
        with:
          token: ${{ secrets.PAT }}
          github-context: "update / autoformat"
